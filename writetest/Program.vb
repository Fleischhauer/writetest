Module Program

    'writer auto flushes every 8kb!

    'Test

    Const LOG_PATH As String = "./log.txt"
    Public randomGenerator As Random
    Public writer As IO.StreamWriter
    Public counter As Integer = 0
    Public watch As Stopwatch

    Sub Main()
        If IO.File.Exists(LOG_PATH) Then
            Try
                writer = New IO.StreamWriter(LOG_PATH, True)
            Catch ex As Exception
                Console.WriteLine(ex.Message)
                Console.ReadKey()
                Return
            End Try
        Else
            Try
                writer = IO.File.CreateText(LOG_PATH)
            Catch ex As Exception
                Console.WriteLine(ex.Message)
                Console.ReadKey()
                Return
            End Try

        End If

        randomGenerator = New Random()
        watch = New Stopwatch

        Task.Delay(2000).GetAwaiter().GetResult()

        watch.Start()

        StartEmulators().GetAwaiter().GetResult()
    End Sub

    Async Function StartEmulators() As Task
        Dim t1 = EventEmulator(1, 100)
        Dim t2 = EventEmulator(2, 100)
        Dim t3 = EventEmulator(3, 100)
        Dim t4 = EventEmulator(4, 100)
        Dim t5 = EventEmulator(5, 100)
        Dim t6 = EventEmulator(6, 100)
        Dim t7 = EventEmulator(7, 100)
        Dim t8 = EventEmulator(8, 100)

        Await Task.Delay(Threading.Timeout.Infinite)
    End Function

    Async Function EventEmulator(number As Integer, delay As Integer) As Task
        Dim _delay = If(delay >= 0, randomGenerator.Next(delay), delay * -1)

        Do
            Await Task.Delay(_delay)
            counter += 1
            Dim message As String = $"{DateTime.Now,-19} ({watch.ElapsedMilliseconds}) Test Log message number {counter}. Generated by Emulator{number}. The delay was {_delay} ms."
            Logger(message)
        Loop
    End Function

    Sub Logger(text As String)
        Try
            Console.WriteLine(text)
            writer.WriteLineAsync(text)
            writer.Flush()
        Catch ex As Exception
            Console.ForegroundColor = ConsoleColor.Red
            Console.WriteLine(ex.Message)
            Console.ForegroundColor = ConsoleColor.Gray
        End Try
    End Sub
End Module
